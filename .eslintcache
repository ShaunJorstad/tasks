[{"/Users/shaunjorstad/Desktop/tasks/src/index.js":"1","/Users/shaunjorstad/Desktop/tasks/src/App.js":"2","/Users/shaunjorstad/Desktop/tasks/src/reportWebVitals.js":"3","/Users/shaunjorstad/Desktop/tasks/src/NavBar.js":"4","/Users/shaunjorstad/Desktop/tasks/src/Content.js":"5","/Users/shaunjorstad/Desktop/tasks/src/Tile.js":"6","/Users/shaunjorstad/Desktop/tasks/src/FirebaseConfig.js":"7"},{"size":500,"mtime":1607809103543,"results":"8","hashOfConfig":"9"},{"size":437,"mtime":1608235822439,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607809103547,"results":"11","hashOfConfig":"9"},{"size":1634,"mtime":1608335165937,"results":"12","hashOfConfig":"9"},{"size":264,"mtime":1608243168040,"results":"13","hashOfConfig":"9"},{"size":2531,"mtime":1608319024604,"results":"14","hashOfConfig":"9"},{"size":431,"mtime":1608334991672,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"whis6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shaunjorstad/Desktop/tasks/src/index.js",[],["32","33"],"/Users/shaunjorstad/Desktop/tasks/src/App.js",[],"/Users/shaunjorstad/Desktop/tasks/src/reportWebVitals.js",[],"/Users/shaunjorstad/Desktop/tasks/src/NavBar.js",[],"/Users/shaunjorstad/Desktop/tasks/src/Content.js",[],"/Users/shaunjorstad/Desktop/tasks/src/Tile.js",["34","35","36","37","38","39","40","41","42","43"],"import React from 'react';\nimport 'tailwindcss/tailwind.css';\nimport todayLogo from './icons/today.svg';\nimport allLogo from './icons/all.svg';\nimport upcomingLogo from './icons/upcoming.svg';\nimport flaggedLogo from './icons/flagged.svg';\nimport './index.css';\n\nclass Tile extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    renderIcon() {\n        switch (this.props.icon) {\n            case \"today\":\n                return (\n                    <img src={todayLogo} width=\"24\" height=\"24\" />\n                );\n            case \"all\":\n                return (\n                    <img src={allLogo} width=\"24\" height=\"24\" />\n                );\n            case \"upcoming\":\n                return (\n                    <img src={upcomingLogo} width=\"24\" height=\"24\" />\n                );\n            case \"flagged\":\n                return (\n                    <img src={flaggedLogo} width=\"24\" height=\"24\" />\n                );\n        }\n    }\n\n    renderTaskCount() {\n        return (\n            <div className={`${(this.props.activeList == this.props.title ? 'selectedTaskCount text-tileSelectedTitle' : 'unselectedTaskCount')}`}>\n                <p>{this.props.taskCount}</p>\n            </div>\n        )\n    }\n\n    renderTitle() {\n        return (\n            <div className={`${(this.props.activeList == this.props.title ? 'selectedTitle text-tileSelectedTitle' : 'unselectedTitle text-tileUnselectedTitle')}`}>\n                <p>{this.props.title}</p>\n            </div>\n        )\n    }\n\n    renderBackgroundColor() {\n        if (this.props.activeList == this.props.title) {\n\n            switch(this.props.title) {\n                case \"today\":\n                    return \"bg-blue\";\n                case \"all\":\n                    return \"bg-gray\";\n                case \"upcoming\":\n                    return \"bg-red\";\n            }\n        } else {\n            return 'bg-tileUnselected';\n        }\n    }\n\n    render() {\n        return (\n            <div\n                id={this.props.title + \"Tile\"}\n                className={`${this.renderBackgroundColor() + ' wh-tile rounded-lg'}`}\n                onClick={() => { this.props.handler(this.props.title) }\n                }>\n                <div className=\"place-self-center grid grid-cols-2 py-2 px-2 justify-between gap-1\">\n                    {this.renderIcon()}\n                    {this.renderTaskCount()}\n                    {this.renderTitle()}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Tile","/Users/shaunjorstad/Desktop/tasks/src/FirebaseConfig.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":10,"column":5,"nodeType":"50","messageId":"51","endLine":12,"endColumn":6},{"ruleId":"52","severity":1,"message":"53","line":15,"column":9,"nodeType":"54","messageId":"55","endLine":32,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":18,"column":21,"nodeType":"58","endLine":18,"endColumn":67},{"ruleId":"56","severity":1,"message":"57","line":22,"column":21,"nodeType":"58","endLine":22,"endColumn":65},{"ruleId":"56","severity":1,"message":"57","line":26,"column":21,"nodeType":"58","endLine":26,"endColumn":70},{"ruleId":"56","severity":1,"message":"57","line":30,"column":21,"nodeType":"58","endLine":30,"endColumn":69},{"ruleId":"59","severity":1,"message":"60","line":37,"column":55,"nodeType":"61","messageId":"62","endLine":37,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":45,"column":55,"nodeType":"61","messageId":"62","endLine":45,"endColumn":57},{"ruleId":"59","severity":1,"message":"60","line":52,"column":35,"nodeType":"61","messageId":"62","endLine":52,"endColumn":37},{"ruleId":"52","severity":1,"message":"53","line":54,"column":13,"nodeType":"54","messageId":"55","endLine":61,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]